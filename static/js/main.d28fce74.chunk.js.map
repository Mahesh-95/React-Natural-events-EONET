{"version":3,"sources":["components/Spinner.gif","components/Loader.jsx","components/WildfireMarker.jsx","components/LocationInfoBox.jsx","components/VolcanoMarker.jsx","components/Map.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","src","spinner","alt","WildfireMarker","lat","lng","onClick","icon","wildfireIcon","LocationInfoBox","info","id","title","VolcanoMarker","volcanoIcon","Map","eventData","center","zoom","useState","locationInfo","setlocationInfo","makers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","Header","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d28fce74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spinner.ab6cafe8.gif\";","import spinner from './Spinner.gif';\r\n\r\nconst Loader = () => {\r\n    return ( \r\n        <div className=\"loader\">\r\n            <img src={spinner} alt=\"Loading\" />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Loader;","import {Icon} from '@iconify/react';\r\nimport wildfireIcon from '@iconify/icons-mdi/fire-alert';\r\n\r\nconst WildfireMarker = ({ lat, lng, onClick}) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={wildfireIcon} className=\"wildfire-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WildfireMarker\r\n","const LocationInfoBox = ({info}) => {\r\n    return (\r\n        <div className=\"location-info\">\r\n            <h2>Event Location Info</h2>\r\n            <ul>\r\n                <li>ID: <strong>{info.id}</strong></li>\r\n                <li>TITLE: <strong>{info.title}</strong></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationInfoBox\r\n","import {Icon} from '@iconify/react';\r\nimport volcanoIcon from '@iconify/icons-mdi/mountain';\r\n\r\nconst VolcanoMarker = ({ lat, lng, onClick}) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={volcanoIcon} className=\"volcano-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VolcanoMarker\r\n","import {useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport WildfireMarker from './WildfireMarker';\r\nimport LocationInfoBox from './LocationInfoBox';\r\nimport VolcanoMarker from './VolcanoMarker';\r\n\r\nconst Map = ({eventData, center, zoom}) => {\r\n    const [locationInfo, setlocationInfo] = useState(null);\r\n    const makers = eventData.map(ev => {\r\n        if(ev.categories[0].id === 8){\r\n            return <WildfireMarker lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} key={ev.geometries[0].coordinates[0]}\r\n            onClick={()=> setlocationInfo({id: ev.id, title: ev.title})}\r\n            />\r\n        }else if(ev.categories[0].id === 12 && ev.geometries[0].coordinates[1]){\r\n            return <VolcanoMarker lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} key={ev.geometries[0].coordinates[0]}\r\n            onClick={()=> setlocationInfo({id: ev.id, title: ev.title})}\r\n            />\r\n        }\r\n        return null;\r\n    })\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{key: 'AIzaSyAxuCy7ksh-fzT-j3FilDETLaIMRLHMRY8'}}\r\n                defaultCenter={center}\r\n                defaultZoom={zoom}\r\n            >\r\n               { makers }\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps ={\r\n    center: {\r\n        lat: 42.3265,\r\n        lng: -122.8756\r\n    },\r\n    zoom: 4\r\n}\r\n\r\nexport default Map;\r\n","const Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Natural events from EONET </h1>\r\n            <span>Click on Icon to get Info</span>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import {useState, useEffect} from 'react';\nimport Loader from './components/Loader';\nimport Map from './components/Map';\nimport Header from './components/Header';\n\nfunction App() {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(()=>{\n    const fetchEvents = async() =>{\n      setLoading(true);\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events');\n      const {events} = await res.json();\n\n      setEventData(events);\n      setLoading(false)\n    }\n    fetchEvents();\n    console.log(eventData); \n  }, [])\n  return (\n    <div>\n      <Header />\n      { !loading ? <Map eventData={eventData} /> : <Loader />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}